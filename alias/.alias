#!/bin/bash

screen-reattach(){
    SESSIONNAME=${1:-tmux}
    which tmux &> /dev/null
    if [ $? -eq 0 ]
    then
        tmux -2 new -A -s $SESSIONNAME
    else
        screen -R -d $SESSIONNAME
    fi
}
export -f screen-reattach
alias sr="screen-reattach"

alias dos='export PS1=$C_COLON_BACKSLASH'
alias dstatall='dstat -larm --top-io --top-latency 10'
alias fgrep="find . | awk '!/CVS|\.git|\.svn|_Stub|\.#/  {print \$0;}' | sed 's/\ /\\\ /g' | xargs grep --color=always -in "
alias ls="ls -hl --color"
alias gitclean='git fetch -p | git branch --merged master | grep -v "\* master" | xargs -n 1 git branch -d'
alias gitpp="git pull && git push"
alias grepc="grep --color=always -i"
alias htop="TERM=screen htop"
alias salias="source ~/.alias"

alias sctl="sudo systemctl"

#Novetta Commands
alias nov="cd $NOVETTA"
alias debug="export LOG_LEVEL=DEBUG && echo $LOG_LEVEL"
alias ker="cd $KERBPROXY"
alias kersource="source /opt/kerbproxy/conf/kerbproxy.env"
alias fms="cd $NOVETTA/fms"
alias npminstall="npm install && npm run start"
alias yarninstall="yarn install && yarn run start"
alias search="cd $NOVETTA/search"
alias dep="dep ensure -v -vendor-only"
alias resetusers="sh /home/centos/gocode/src/github.com/arimbey/dot-files/devScripts/updateUsers.sh"

# GEOLAYERS/GEOSERVER

alias geolayers="cd $NOVETTA/geolayers"
alias upgeo="sh $NOVETTA/geolayers/setup/updateDb.sh"
alias debuggeolayers="geolayers && source dev/geolayers_dev.env && go run server/cmd/main.go"
alias gevol="cd /gevol/geoserver_data/workspaces/ngs/AIDE"
alias geoserver="cd $NOVETTA/Geoserver"

#Ares commands
alias aresdev="source $ARES/dev/ares_dev.env"
alias aresunittest="sh $ARES/dev/rununittests.sh"
alias runares="source $ARES/dev/ares_dev.env && cd $ARES/aresserver/server && go run server.go"
alias debugares="aresdev && debug && go run $ARES/aresserver/server/server.go"
alias upares="sh $ARES/setup/updateDb.sh"
alias ares="cd $ARES"
alias runaresclient="nvm use 10.13.0 && cd $ARES/aresweb $$ aresdev && yarninstall"
alias fbncjs="cd $ARES/aresweb/packages/fbncjs"
alias aresserver="cd $ARES/aresserver"
alias aresweb="cd $ARES/aresweb"
alias glideinstall="cd $ARES && glide cc && glide install && aresdev && cd $ARES/aresserver/server && go install && go run server.go"
alias npm_login="NPM_USER=arimbey NPM_PASS=tEKqydkgXUyuejBZyO7Vq2z8FsXQMtTog_vSiSijht1ZsFdfbW NPM_EMAIL=example@example.com NPM_REGISTRY=https://npm.novadev.me npm-cli-login"
alias npmlink="npm install && npm run build && npm link"

#Ares Organizations
alias runorg="sh $ARES/services/organizations/dev/run_server.sh"
alias org="cd $ARES/services/organizations"
alias uporg="sh $ARES/setup/organizations/updateDb.sh"

#Ares Tracks commands
alias arimbey="cd /home/centos/gocode/src/github.com/arimbey/dot-files"
alias startfeed="arimbey && sh devScripts/cot_tmux.sh"
alias stopfeed="arimbey $$ sh devScripts/kill_cot_tmux.sh"
alias rungeosub="aresdev && cd $ARES/services/geosubscriptions/cmd && go run -race main.go"
alias runrecorder="aresdev && cd $ARES/services/recorder/cmd && go run -race recorder.go"
alias runexec="aresdev  && nov && cd executor/distexecutorservice &&  go run main.go"
alias rungen="aresdev && debug && ares && cd util/generator/cot_generator && echo go run main.go -outIp 234.1.2.3:1234 -num 250"
alias deletetelemetry="arimbey && sh devScripts/clearTelemetry.sh"
alias cotgen="cd $ARES/util/generator/cot_generator"

# Aide-Settings
alias debugsettings="aresdev && nov && cd go.settings && debug && ./dev/run_server.sh"

#Logcop
alias debuglogcop="nov && cd logcop && source dev/logcop.env && debug && go run logcopserver/server/server.go"
alias logcopclient="nov && cd logcop/logcopweb && npminstall"

alias working="tmux a -t working"

alias startworking="sh /home/centos/gocode/src/github.com/arimbey/dot-files/devScripts/start.sh"
if [[ -f "$HOME/.local.alias" ]]; then
    source $HOME/.local.alias
fi
